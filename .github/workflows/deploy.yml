name: Build, Test, and Deploy

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Build site
        run: yarn build:site
      
      - name: Build component
        run: yarn build:component
      
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist-site/

      - name: Archive build for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: zip -r dist-site.zip dist-site/
      
      - name: Archive package for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: zip -r package.zip dist/
      
      - name: Upload release artifact (site)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: dist-site-zip
          path: dist-site.zip
      
      - name: Upload release artifact (package)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: package-zip
          path: package.zip

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint
      
      - name: Type Check
        run: yarn typecheck

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Download build artifact (site)
        uses: actions/download-artifact@v4
        with:
          name: dist-site-zip

      - name: Download build artifact (package)
        uses: actions/download-artifact@v4
        with:
          name: package-zip

      - name: Debug - List files
        run: |
          echo "Listing files in workspace:"
          ls -la
          echo "Checking for dist-site.zip and package.zip:"
          find . -name "*.zip"

      - name: Rename artifacts
        run: |
          mv dist-site.zip dist-site-${{ github.ref_name }}.zip
          mv package.zip package-${{ github.ref_name }}.zip

      - name: Debug - List files after rename
        run: |
          echo "Listing files after rename:"
          ls -la

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}.
            Includes build artifacts in dist-site-${{ github.ref_name }}.zip and package-${{ github.ref_name }}.zip.
          files: |
            dist-site-${{ github.ref_name }}.zip
            package-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  publish-npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build component
        run: yarn build:component
      
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}